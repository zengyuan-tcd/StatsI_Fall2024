#import data
y <- c ( 105 , 69 , 86 , 100 , 82 , 111 , 104 , 110 , 87 , 108 , 87 , 90 , 94 , 113 , 112 , 98 , 80 , 97 , 95 , 111 , 114 , 89 , 95 , 126 , 98 )
#Calculating the confidence interval usually requires taking into account the mean, standard deviation, standard error, and critical value of the sample, so the above results must be obtained first
#Calculate sample mean
y_mean <- mean(y)
#Calculate standard deviation
y_sd <- sd(y)
#Calculate sample size
n <- length(y)
#The critical value can be found by looking up the statistical table or using code
a <- 0.1
t1_quantile <- qt(1-a/2, df = n - 1)
#Calculate the error
error <- t1_quantile*(y_sd/sqrt(n))
#Construct the Confidence Interval
lower_bound <- y_mean - error
upper_bound <- y_mean + error
#the consequence is (lower_bound,upper_bound)
paste("The confidence interval is: (", lower_bound, ", ", upper_bound, ")", sep="")
#Q1.2
#The mean and standard deviation have been calculated in the previous question
#national_data <- 100
national_data <- 100
#Calculate the t-statistic
t_statistic <- (y_mean - national_data) / (y_sd / sqrt(n))
t_statistic
#Because this test already has a clear hypothesis about one direction of the population parameter, and only has one tail to look for extreme values, it is therefore a one-tailed test.
#This is often used to test whether the mean is significantly greater than some hypothesized value
a <- 0.05
t2_quantile <- qt(1-a, df=n-1,lower.tail = FALSE)
t2_quantile
if(t_statistic > t2_quantile){
print('The average IQ of students in this school is higher than the national average.')
}else{
print('The average IQ of students in this school is not higher than the national average.')
}
#import data
y <- c ( 105 , 69 , 86 , 100 , 82 , 111 , 104 , 110 , 87 , 108 , 87 , 90 , 94 , 113 , 112 , 98 , 80 , 97 , 95 , 111 , 114 , 89 , 95 , 126 , 98 )
#Calculating the confidence interval usually requires taking into account the mean, standard deviation, standard error, and critical value of the sample, so the above results must be obtained first
#Calculate sample mean
y_mean <- mean(y)
#Calculate standard deviation
y_sd <- sd(y)
#Calculate sample size
n <- length(y)
#The critical value can be found by looking up the statistical table or using code
a1 <- 0.1
t1_quantile <- qt(1-a1/2, df = n - 1)
#Calculate the error
error <- t1_quantile*(y_sd/sqrt(n))
#Construct the Confidence Interval
lower_bound <- y_mean - error
upper_bound <- y_mean + error
#the consequence is (lower_bound,upper_bound)
paste("The confidence interval is: (", lower_bound, ", ", upper_bound, ")", sep="")
#import data
y <- c ( 105 , 69 , 86 , 100 , 82 , 111 , 104 , 110 , 87 , 108 , 87 , 90 , 94 , 113 , 112 , 98 , 80 , 97 , 95 , 111 , 114 , 89 , 95 , 126 , 98 )
#Calculating the confidence interval usually requires taking into account the mean, standard deviation, standard error, and critical value of the sample, so the above results must be obtained first
#Calculate sample mean
y_mean <- mean(y)
#Calculate standard deviation
y_sd <- sd(y)
#Calculate sample size
n <- length(y)
#The critical value can be found by looking up the statistical table or using code
a1 <- 0.1
t1_quantile <- qt(1-a1/2, df = n - 1)
#Calculate the error
error <- t1_quantile*(y_sd/sqrt(n))
#Construct the Confidence Interval
lower_bound <- y_mean - error
upper_bound <- y_mean + error
#the consequence is (lower_bound,upper_bound)
paste("The confidence interval is: (", lower_bound, ", ", upper_bound, ")", sep="")
#Q1.2
#The mean and standard deviation have been calculated in the previous question
#national_data <- 100
national_data <- 100
#Calculate the t-statistic
t_statistic <- (y_mean - national_data) / (y_sd / sqrt(n))
t_statistic
#Because this test already has a clear hypothesis about one direction of the population parameter, and only has one tail to look for extreme values, it is therefore a one-tailed test.
#This is often used to test whether the mean is significantly greater than some hypothesized value
a2 <- 0.05
t2_quantile <- qt(1-a2, df=n-1,lower.tail = FALSE)
t2_quantile
if(t_statistic > t2_quantile){
print('The average IQ of students in this school is higher than the national average.')
}else{
print('The average IQ of students in this school is not higher than the national average.')
}
# 输出结果
cat(result)---
cat(result)
---
title: "R Notebook"
# 输入数据
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98,
80, 97, 95, 111, 114, 89, 95, 126, 98)
# 计算样本均值
y_mean <- mean(y)
# 计算样本标准差
y_sd <- sd(y)
# 计算样本容量
n <- length(y)
# 全国平均IQ
national_IQ <- 100
# 计算t统计量
t_statistic <- (y_mean - national_IQ) / (y_sd / sqrt(n))
# 计算临界值
t_critical <- qt(1 - 0.05, df = n - 1)
# 作出决策
if (t_statistic > t_critical) {
result <- "The average IQ of students in this school is higher than the national average."
} else {
result <- "The average IQ of students in this school is not higher than the national average."
}
# 输出结果
cat(result)
t_critical
t_statistic
t2_quantile
t_statistic
if(t_statistic > t2_quantile){
print('The average IQ of students in this school is higher than the national average.')
}else{
print('The average IQ of students in this school is not higher than the national average.')
}
t_statistic
t2_quantile
t_critical
t2_quantile <- qt(1-a2, df=n-1)
t2_quantile
if(t_statistic > t2_quantile){
print('The average IQ of students in this school is higher than the national average.')
}else{
print('The average IQ of students in this school is not higher than the national average.')
}
a2 <- 0.05
t2_quantile <- qt(1-a2, df=n-1, lower.tail = TRUE)
t2_quantile
if(t_statistic > t2_quantile){
print('The average IQ of students in this school is higher than the national average.')
}else{
print('The average IQ of students in this school is not higher than the national average.')
}
#import data
y <- c ( 105 , 69 , 86 , 100 , 82 , 111 , 104 , 110 , 87 , 108 , 87 , 90 , 94 , 113 , 112 , 98 , 80 , 97 , 95 , 111 , 114 , 89 , 95 , 126 , 98 )
#Calculating the confidence interval usually requires taking into account the mean, standard deviation, standard error, and critical value of the sample, so the above results must be obtained first
#Calculate sample mean
y_mean <- mean(y)
#Calculate standard deviation
y_sd <- sd(y)
#Calculate sample size
n <- length(y)
#The critical value can be found by looking up the statistical table or using code
a1 <- 0.1
t1_quantile <- qt(1-a1/2, df = n - 1)
#Calculate the error
error <- t1_quantile*(y_sd/sqrt(n))
#Construct the Confidence Interval
lower_bound <- y_mean - error
upper_bound <- y_mean + error
#the consequence is (lower_bound,upper_bound)
paste("The confidence interval is: (", lower_bound, ", ", upper_bound, ")", sep="")
#Q1.2
#The mean and standard deviation have been calculated in the previous question
#national_data <- 100
national_data <- 100
#Calculate the t-statistic
t_statistic <- (y_mean - national_data) / (y_sd / sqrt(n))
t_statistic
#Because this test already has a clear hypothesis about one direction of the population parameter, and only has one tail to look for extreme values, it is therefore a one-tailed test.
#This is often used to test whether the mean is significantly greater than some hypothesized value
a2 <- 0.05
t2_quantile <- qt(1-a2, df=n-1, lower.tail = TRUE)
t2_quantile
if(t_statistic > t2_quantile){
print('The average IQ of students in this school is higher than the national average.')
}else{
print('The average IQ of students in this school is not higher than the national average.')
}
#import data
y <- c ( 105 , 69 , 86 , 100 , 82 , 111 , 104 , 110 , 87 , 108 , 87 , 90 , 94 , 113 , 112 , 98 , 80 , 97 , 95 , 111 , 114 , 89 , 95 , 126 , 98 )
#Calculating the confidence interval usually requires taking into account the mean, standard deviation, standard error, and critical value of the sample, so the above results must be obtained first
#Calculate sample mean
y_mean <- mean(y)
#Calculate standard deviation
y_sd <- sd(y)
#Calculate sample size
n <- length(y)
#The critical value can be found by looking up the statistical table or using code
a1 <- 0.1
t1_quantile <- qt(1-a1/2, df = n - 1)
#Calculate the error
error <- t1_quantile*(y_sd/sqrt(n))
#Construct the Confidence Interval
lower_bound <- y_mean - error
upper_bound <- y_mean + error
#the consequence is (lower_bound,upper_bound)
paste("The confidence interval is: (", lower_bound, ", ", upper_bound, ")", sep="")
#Q1.2
#The mean and standard deviation have been calculated in the previous question
#national_data <- 100
national_data <- 100
#Calculate the t-statistic
t_statistic <- (y_mean - national_data) / (y_sd / sqrt(n))
t_statistic
#Because this test already has a clear hypothesis about one direction of the population parameter, and only has one tail to look for extreme values, it is therefore a one-tailed test.
#This is often used to test whether the mean is significantly greater than some hypothesized value
a2 <- 0.05
t2_quantile <- qt(1-a2, df=n-1, lower.tail = TRUE)
t2_quantile
if(t_statistic > t2_quantile){
print('The average IQ of students in this school is higher than the national average.')
}else{
print('The average IQ of students in this school is not higher than the national average.')
}
cat(result)---
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98,
80, 97, 95, 111, 114, 89, 95, 126, 98)
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98,
80, 97, 95, 111, 114, 89, 95, 126, 98)
# Calculate sample mean
y_mean <- mean(y)
# Calculate sample standard deviation
y_sd <- sd(y)
# Calculate sample size
n <- length(y)
# Set confidence level
alpha <- 0.10
# Find the critical t-value
t_critical <- qt(1 - alpha/2, df = n - 1)
# Calculate standard error
standard_error <- y_sd / sqrt(n)
# Calculate margin of error
margin_of_error <- t_critical * standard_error
# Construct the confidence interval
lower_bound <- y_mean - margin_of_error
upper_bound <- y_mean + margin_of_error
# Output the confidence interval
cat("The 90% confidence interval for the average student IQ is: (", lower_bound, ", ", upper_bound, ")\n")
